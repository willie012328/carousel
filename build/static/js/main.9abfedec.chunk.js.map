{"version":3,"sources":["redux/actions/action-types.js","constants/application.js","redux/reducers/carousel-reducer.js","redux/reducers/combineReducers.js","modules/service.js","modules/utilities.js","redux/sagas/carousel-saga.js","redux/sagas/index.js","redux/store/store.js","components/common/UIErrorBoundary.jsx","containers/landing/index.jsx","constants/repoOwner.js","containers/error/index.jsx","containers/spinner/index.jsx","containers/carousel/index.jsx","redux/actions/carousel-action.js","Routes.jsx","App.js","reportWebVitals.js","index.js"],"names":["GET_CAROUSEL_CONFIG_INIT","GET_CAROUSEL_CONFIG_SUCCESS","GET_CAROUSEL_CONFIG_FAIL","PROP_INITIALIZED","PROP_FETCHING","PROP_ERROR","PROP_STATUS","PROP_DATA","PROP_OTHER","combineReducers","carouselConfig","state","action","status","data","undefined","ImmutableMap","ApplicationConstants","type","Actions","withMutations","newState","set","fromJS","CarouselReducer","service","get","url","axios","then","res","post","options","put","del","delete","api","method","source","cancelRequest","httpMethod","toLowerCase","hasData","indexOf","settings","CancelToken","cancelToken","token","request","CANCEL","cancel","generateURL","dataObj","params","match","paramPlaceholders","paramKeys","map","param","inx","objKey","Array","isArray","length","curUrl","i","encodeURIComponent","replace","watchCarouselConfig","callCarouselConfig","fetchCarouselConfig","takeLatest","call","formEndPoint","Config","response","toString","Index","all","fork","CarouselSaga","sagaMiddleware","createSagaMiddleware","configStore","createStore","appReducers","composeWithDevTools","applyMiddleware","run","rootSaga","UIErrorBoundary","props","error","info","console","log","this","setState","hasError","children","Component","LandingPage","transformIncomingProps","updateState","key","value","handleChange","event","target","handleSubmit","history","push","source_repo_name","className","onChange","onClick","React","ErrorgPage","to","Spinner","class","Carousel","showIndex","showBullets","infinite","showThumbnails","showFullscreenButton","showGalleryFullscreenButton","showPlayButton","showGalleryPlayButton","showNav","isRTL","slideDuration","slideInterval","slideOnThumbnailOver","thumbnailPosition","showVideo","useWindowKeyDown","images","checkCarouselConfig","prevProps","carouselConfigInit","carouselConfigData","getIn","List","convertDateToJS","toJS","newImageStateArr","image","newImageSet","handleIsVideoObject","handleLocalImage","imageObj","Object","assign","_renderVideo","bind","carouselRepo","indexStart","indexEnd","localImageArr","original","thumbnail","renderSpinner","renderErrorPage","errorStatus","errorData","_onImageClick","debug","_imageGallery","getCurrentIndex","_onImageLoad","src","_onSlide","index","_resetVideo","_onPause","_onScreenChange","fullScreenElement","_onPlay","_handleInputChange","_handleCheckboxChange","checked","_handleThumbnailPositionChange","_toggleShowVideo","Boolean","item","embedUrl","width","height","title","frameBorder","allowFullScreen","alt","description","style","right","left","getCarouselConfig","prevState","isFetching","isError","ref","items","onImageLoad","onSlide","onPause","onScreenChange","onPlay","parseInt","additionalClass","id","htmlFor","connect","store","dispatch","getCarouselConfigAction","withRouter","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9abfedec.chunk.js","sourcesContent":["//Get carousel content config\r\nexport const GET_CAROUSEL_CONFIG_INIT = \"GET_CAROUSEL_CONFIG_INIT\";\r\nexport const GET_CAROUSEL_CONFIG_SUCCESS = \"GET_CAROUSEL_CONFIG_SUCCESS\";\r\nexport const GET_CAROUSEL_CONFIG_FAIL = \"GET_CAROUSEL_CONFIG_FAIL\";\r\n","// This file is used to maintain React and Redux state constants\r\n\r\nexport const PROP_INITIALIZED = \"initialized\";\r\nexport const PROP_FETCHING = \"fetching\";\r\nexport const PROP_ERROR = \"error\";\r\nexport const PROP_STATUS = \"status\";\r\nexport const PROP_DATA = \"data\";\r\nexport const PROP_OTHER = \"other\";\r\n","import { combineReducers } from \"redux\";\r\nimport { Map as ImmutableMap, fromJS } from \"immutable\";\r\n\r\nimport * as Actions from \"../../redux/actions/action-types\";\r\nimport * as ApplicationConstants from \"../../constants/application\";\r\n\r\n// Get carousel content config\r\nconst carouselConfig = (state, action) => {\r\n  const { status = 0, data = {} } = action;\r\n\r\n  if (state === undefined) {\r\n    return ImmutableMap({\r\n      [ApplicationConstants.PROP_INITIALIZED]: false,\r\n      [ApplicationConstants.PROP_FETCHING]: false,\r\n      [ApplicationConstants.PROP_ERROR]: false,\r\n      [ApplicationConstants.PROP_STATUS]: status,\r\n      [ApplicationConstants.PROP_DATA]: ImmutableMap(data),\r\n    });\r\n  }\r\n\r\n  switch (action.type) {\r\n    case Actions.GET_CAROUSEL_CONFIG_INIT:\r\n      return state.withMutations((newState) => {\r\n        newState.set(ApplicationConstants.PROP_INITIALIZED, false);\r\n        newState.set(ApplicationConstants.PROP_FETCHING, true);\r\n        newState.set(ApplicationConstants.PROP_ERROR, false);\r\n        newState.set(ApplicationConstants.PROP_STATUS, status);\r\n        newState.set(ApplicationConstants.PROP_OTHER, ImmutableMap(data));\r\n      });\r\n\r\n    case Actions.GET_CAROUSEL_CONFIG_SUCCESS:\r\n      return state.withMutations((newState) => {\r\n        newState.set(ApplicationConstants.PROP_INITIALIZED, true);\r\n        newState.set(ApplicationConstants.PROP_FETCHING, false);\r\n        newState.set(ApplicationConstants.PROP_ERROR, false);\r\n        newState.set(ApplicationConstants.PROP_STATUS, status);\r\n        newState.set(ApplicationConstants.PROP_DATA, fromJS(data));\r\n      });\r\n\r\n    case Actions.GET_CAROUSEL_CONFIG_FAIL:\r\n      return state.withMutations((newState) => {\r\n        newState.set(ApplicationConstants.PROP_INITIALIZED, false);\r\n        newState.set(ApplicationConstants.PROP_FETCHING, false);\r\n        newState.set(ApplicationConstants.PROP_ERROR, true);\r\n        newState.set(ApplicationConstants.PROP_STATUS, status);\r\n        newState.set(ApplicationConstants.PROP_DATA, fromJS(data));\r\n      });\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  carouselConfig,\r\n});\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport CarouselReducer from \"./carousel-reducer\";\r\n\r\nexport default combineReducers({\r\n  CarouselReducer,\r\n});\r\n","import axios, { CancelToken } from \"axios\";\r\n\r\nimport { CANCEL } from \"redux-saga\";\r\n\r\nconst api = (method, url, data = {}, options = {}, cancelRequest = false) => {\r\n  const httpMethod = method.toLowerCase();\r\n\r\n  const hasData = [\"post\", \"put\", \"patch\"].indexOf(httpMethod) >= 0;\r\n  const settings = hasData ? options : data;\r\n\r\n  let source;\r\n\r\n  if (cancelRequest) {\r\n    source = CancelToken.source();\r\n    settings.cancelToken = source.token;\r\n  }\r\n\r\n  const request = hasData\r\n    ? axios[httpMethod](url, data, settings)\r\n    : axios[httpMethod](url, settings);\r\n\r\n  if (cancelRequest) request[CANCEL] = () => source.cancel();\r\n\r\n  return request;\r\n};\r\n\r\nconst get = (url) => {\r\n  return axios.get(url).then((res) => res.data);\r\n};\r\n\r\nconst post = (url, data, options) => {\r\n  return axios.post(url, data, options).then((res) => res.data);\r\n};\r\n\r\nconst put = (url, data, options) => {\r\n  return axios.put(url, data, options).then((res) => res.data);\r\n};\r\n\r\nconst del = (url, data, options) => {\r\n  return axios.delete(url, data, options).then((res) => res.data);\r\n};\r\n\r\nconst service = {\r\n  get,\r\n  post,\r\n  put,\r\n  del,\r\n  api,\r\n};\r\n\r\nexport default service;\r\n","export function generateURL(url = \"\", dataObj = {}) {\r\n  const params = url.match(/[^?/&]+([{}])/g);\r\n  const paramPlaceholders = url.match(/([{]+[\\w]+[}])+/g);\r\n  const paramKeys = url.match(/[^{}]+(?=})/g);\r\n\r\n  params &&\r\n    params.map((param, inx) => {\r\n      const objKey = dataObj[paramKeys[inx]];\r\n\r\n      if (objKey) {\r\n        if (Array.isArray(objKey)) {\r\n          if (objKey.length > 0) {\r\n            let curUrl = \"\";\r\n            for (let i = 0; i < objKey.length; i++) {\r\n              if (i === 0) {\r\n                curUrl += encodeURIComponent(objKey[i]);\r\n              } else {\r\n                curUrl += `&${paramKeys[inx]}=${encodeURIComponent(objKey[i])}`;\r\n              }\r\n            }\r\n            url = url.replace(paramPlaceholders[inx], curUrl);\r\n          } else {\r\n            url = url.replace(param, \"\");\r\n          }\r\n        } else {\r\n          url = url.replace(paramPlaceholders[inx], encodeURIComponent(objKey));\r\n        }\r\n      } else {\r\n        url = url.replace(param, \"\");\r\n      }\r\n\r\n      return null;\r\n    });\r\n\r\n  return url\r\n    .replace(/[&]{2,}/g, \"&\")\r\n    .replace(/[?&]+$/g, \"\")\r\n    .replace(\"?&\", \"?\");\r\n}\r\n","import { takeLatest, put, call } from \"redux-saga/effects\";\r\n\r\nimport * as Actions from \"../../redux/actions/action-types\";\r\n\r\nimport * as Config from \"../../config/config.json\";\r\n\r\nimport service from \"../../modules/service\";\r\nimport { generateURL } from \"../../modules/utilities\";\r\n\r\n// Get carousel content config\r\nexport function* watchCarouselConfig() {\r\n  yield takeLatest(Actions.GET_CAROUSEL_CONFIG_INIT, callCarouselConfig);\r\n}\r\n\r\nexport function* callCarouselConfig(action) {\r\n  yield call(fetchCarouselConfig, action.data);\r\n}\r\n\r\nexport function* fetchCarouselConfig(data) {\r\n  const formEndPoint = `${Config.source_URL}/${Config.source_config_file}`;\r\n  const url = generateURL(formEndPoint, data);\r\n\r\n  try {\r\n    const response = yield call(service.api, \"get\", url);\r\n\r\n    const { status, data } = response;\r\n    yield put({\r\n      type: Actions.GET_CAROUSEL_CONFIG_SUCCESS,\r\n      status: status,\r\n      data: data,\r\n    });\r\n  } catch (error) {\r\n    const status = error.response ? error.response.status : 500;\r\n    const data = error.response\r\n      ? error.response\r\n      : { response: error.toString() };\r\n\r\n    yield put({\r\n      type: Actions.GET_CAROUSEL_CONFIG_FAIL,\r\n      status: status,\r\n      data: data,\r\n    });\r\n  }\r\n}\r\n","import { fork, all } from \"redux-saga/effects\";\r\n\r\nimport * as CarouselSaga from \"./carousel-saga\";\r\n\r\nfunction* Index() {\r\n  yield all([fork(CarouselSaga.watchCarouselConfig)]);\r\n}\r\n\r\nexport default Index;\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\n\r\nimport appReducers from \"../reducers/combineReducers\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst configStore = createStore(\r\n  appReducers,\r\n  {},\r\n  composeWithDevTools(applyMiddleware(sagaMiddleware))\r\n);\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default configStore;\r\n","import React, { Component } from 'react';\nclass UIErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'hasError': false,\n      'error': null,\n      'info': null\n    };\n  }\n\n  componentDidCatch(error, info) {\n    console.log('Error:', error);\n    console.log('Info:', info);\n\n    this.setState({\n      'hasError': true,\n      'error': error,\n      'info': info\n    });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n\n        </div>\n      );\n    } else {\n      return this.props.children;\n    }\n  }\n}\n\nexport default UIErrorBoundary;\n","import React from 'react';\r\n\r\nimport * as RepoOwner from \"../../constants/repoOwner\";\r\n\r\nclass LandingPage extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.transformIncomingProps();\r\n  }\r\n\r\n  transformIncomingProps = props => {\r\n    const state = {};\r\n\r\n    state['source_repo_name'] = '';\r\n\r\n    return state;\r\n  };\r\n\r\n  updateState = (key, value) => {\r\n    this.setState({\r\n      [key]: value\r\n    });\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    const value = event.target.value;\r\n\r\n    this.updateState('source_repo_name', value)\r\n  }\r\n\r\n  handleSubmit = () => {\r\n    this.props.history.push(`/${this.state.source_repo_name}`);\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <section className='app'>\r\n        <div className='app-sandbox'>\r\n          <div className='app-sandbox-content text-center'>\r\n            <h2 className='app-header'>Enter Source Repository Name</h2>\r\n  \r\n            <div className='margin-auto'>\r\n              <label className='landing-interval-label'>{`${RepoOwner.REPO_OWNER}`}</label>\r\n              <input\r\n                className='landing-interval-input'\r\n                type='text'\r\n                onChange={this.handleChange}\r\n                value={this.state.source_repo_name}/>\r\n              <button className='landing-interval-button' onClick={this.handleSubmit}>Submit</button>\r\n            </div>\r\n          </div>\r\n  \r\n        </div>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LandingPage;","// Define source repository owner\r\nexport const REPO_OWNER = \"GitHub/willie012328/\";\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ErrorgPage = (props) => {\r\n  return (\r\n    <section className='app'>\r\n      <div className='app-sandbox'>\r\n        <div className='app-sandbox-content text-center'>\r\n          <h2 className='app-header'>Error</h2>\r\n          <h2 className='app-header'>Code: {props.status}</h2>\r\n\r\n          <div className='margin-auto'>\r\n            <p>Error Content: {props.data}</p>\r\n            <p>Please make sure source repository exists or check out you network connection.</p>\r\n            <Link className=\"button-like-link\" to=\"/\" replace>Back to Landing Page</Link>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ErrorgPage;","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"text-center\">\r\n      <div class=\"loadingio-spinner-rolling-2ahyqw99da8\">\r\n        <div class=\"ldio-oc49n2cckl\">\r\n          <div></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner;","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from 'react-router-dom';\r\nimport { List } from \"immutable\";\r\nimport ImageGallery from \"react-image-gallery\";\r\n\r\nimport * as Config from \"../../config/config.json\";\r\n\r\nimport * as ApplicationConstants from \"../../constants/application\";\r\n\r\nimport { generateURL } from \"../../modules/utilities\";\r\n\r\nimport { getCarouselConfigAction } from \"../../redux/actions/carousel-action\";\r\n\r\nimport ErrorPage from \"../error\";\r\nimport Spinner from \"../spinner\";\r\n\r\nclass Carousel extends React.Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.state = this.transformIncomingProps();\r\n  }\r\n\r\n  transformIncomingProps = props => {\r\n    const state = {\r\n      showIndex: false,\r\n      showBullets: true,\r\n      infinite: true,\r\n      showThumbnails: true,\r\n      showFullscreenButton: true,\r\n      showGalleryFullscreenButton: true,\r\n      showPlayButton: true,\r\n      showGalleryPlayButton: true,\r\n      showNav: true,\r\n      isRTL: false,\r\n      slideDuration: 450,\r\n      slideInterval: 2000,\r\n      slideOnThumbnailOver: false,\r\n      thumbnailPosition: 'bottom',\r\n      showVideo: {},\r\n      useWindowKeyDown: true,\r\n      images: []\r\n    };\r\n\r\n    return state;\r\n  };\r\n\r\n  updateState = (key, value) => {\r\n    this.setState({\r\n      [key]: value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { match } = this.props;\r\n    const carouselRepo = match?.params?.carouselRepo ?? '';\r\n    \r\n    this.props.getCarouselConfig({carouselRepo});\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.checkCarouselConfig(prevProps);\r\n  }\r\n\r\n  //ComponentDidUpdate check\r\n  checkCarouselConfig = (prevProps) => {\r\n    if(prevProps.carouselConfig !== this.props.carouselConfig) {\r\n      const carouselConfigInit = this.props.carouselConfig.get(ApplicationConstants.PROP_INITIALIZED, false);\r\n      const carouselConfigData = this.props.carouselConfig.getIn([ApplicationConstants.PROP_DATA, \"images\"], List([]));\r\n\r\n      if(carouselConfigInit) {\r\n        const convertDateToJS = carouselConfigData.toJS();\r\n        const newImageStateArr = [];\r\n\r\n        convertDateToJS.map(image => {\r\n          let newImageSet;\r\n\r\n          if(image['isVideo']) {\r\n            newImageSet = this.handleIsVideoObject(image);\r\n            return newImageStateArr.push(newImageSet ?? image);\r\n          }\r\n\r\n          if(image['isImageInLocal']) {\r\n            newImageSet = this.handleLocalImage(image);\r\n            return newImageStateArr.push(...newImageSet ?? image);\r\n          }\r\n\r\n          return newImageStateArr.push(image);\r\n        })\r\n\r\n        this.updateState('images', newImageStateArr);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleIsVideoObject = (imageObj) => {\r\n    return imageObj['isVideo'] && Object.assign({}, imageObj, {'renderItem': this._renderVideo.bind(imageObj)});\r\n  }\r\n\r\n  handleLocalImage = (imageObj) => {\r\n    const carouselRepo = this.props.carouselConfig.getIn([ApplicationConstants.PROP_OTHER, 'carouselRepo'], '');\r\n    const url = generateURL(`${Config.source_URL}/`,{carouselRepo});\r\n\r\n    const indexStart = imageObj['indexStart'] ?? 0;\r\n    const indexEnd = imageObj['indexEnd'] ?? 0;\r\n    let localImageArr = [];\r\n\r\n    for(let i = indexStart; i <= indexEnd; i++) {\r\n      localImageArr.push({\r\n        original: `${url}${i}.jpg`,\r\n        thumbnail:`${url}${i}.jpg`\r\n      })\r\n    }\r\n    return localImageArr;\r\n  }\r\n\r\n  renderSpinner = () => {\r\n    return <Spinner />\r\n  }\r\n\r\n  renderErrorPage = () => {\r\n    const errorStatus = this.props.carouselConfig.get(ApplicationConstants.PROP_STATUS, 0);\r\n    const errorData = this.props.carouselConfig.getIn([ApplicationConstants.PROP_DATA, \"data\"], '');\r\n\r\n    return <ErrorPage status={errorStatus} data={errorData}/>\r\n  }\r\n\r\n\r\n  //private functions\r\n  _onImageClick = (event) => {\r\n    console.debug('clicked on image', event.target, 'at index', this._imageGallery.getCurrentIndex());\r\n  }\r\n\r\n  _onImageLoad = (event) => {\r\n    console.debug('loaded image', event.target.src);\r\n  }\r\n\r\n  _onSlide = (index) => {\r\n    this._resetVideo();\r\n    console.debug('slid to index', index);\r\n  }\r\n\r\n  _onPause = (index) => {\r\n    console.debug('paused on index', index);\r\n  }\r\n\r\n  _onScreenChange = (fullScreenElement) => {\r\n    console.debug('isFullScreen?', !!fullScreenElement);\r\n  }\r\n\r\n  _onPlay = (index) => {\r\n    console.debug('playing from index', index);\r\n  }\r\n\r\n  _handleInputChange = (state, event) => {\r\n    if (event.target.value > 0) {\r\n      this.setState({[state]: event.target.value});\r\n    }\r\n  }\r\n\r\n  _handleCheckboxChange = (state, event) => {\r\n    this.setState({[state]: event.target.checked});\r\n  }\r\n\r\n  _handleThumbnailPositionChange = (event) => {\r\n    this.setState({thumbnailPosition: event.target.value});\r\n  }\r\n\r\n  _resetVideo = () => {\r\n    this.setState({showVideo: {}});\r\n\r\n    if (this.state.showPlayButton) {\r\n      this.setState({showGalleryPlayButton: true});\r\n    }\r\n\r\n    if (this.state.showFullscreenButton) {\r\n      this.setState({showGalleryFullscreenButton: true});\r\n    }\r\n  }\r\n\r\n  _toggleShowVideo = (url) => {\r\n    this.state.showVideo[url] = !Boolean(this.state.showVideo[url]);\r\n    this.setState({\r\n      showVideo: this.state.showVideo\r\n    });\r\n\r\n    if (this.state.showVideo[url]) {\r\n      if (this.state.showPlayButton) {\r\n        this.setState({showGalleryPlayButton: false});\r\n      }\r\n\r\n      if (this.state.showFullscreenButton) {\r\n        this.setState({showGalleryFullscreenButton: false});\r\n      }\r\n    }\r\n  }\r\n\r\n  _renderVideo = (item) => {\r\n    return (\r\n      <div>\r\n        {\r\n          this.state.showVideo[item.embedUrl] ?\r\n            <div className='video-wrapper'>\r\n                <button\r\n                  className='close-video'\r\n                  onClick={this._toggleShowVideo.bind(this, item.embedUrl)}\r\n                >\r\n                </button>\r\n                <iframe\r\n                  width='560'\r\n                  height='315'\r\n                  title={item.embedUrl}\r\n                  src={item.embedUrl}\r\n                  frameBorder='0'\r\n                  allowFullScreen\r\n                >\r\n                </iframe>\r\n            </div>\r\n          :\r\n            <a onClick={this._toggleShowVideo.bind(this, item.embedUrl)}>\r\n              <div className='play-button'></div>\r\n              <img className='image-gallery-image' src={item.original} alt=\"Video thumbnail\"/>\r\n              {\r\n                item.description &&\r\n                  <span\r\n                    className='image-gallery-description'\r\n                    style={{right: '0', left: 'initial'}}\r\n                  >\r\n                    {item.description}\r\n                  </span>\r\n              }\r\n            </a>\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const isFetching = this.props.carouselConfig.get(ApplicationConstants.PROP_FETCHING, false);\r\n    const isError = this.props.carouselConfig.get(ApplicationConstants.PROP_ERROR, false);\r\n\r\n    if(isFetching) {\r\n      return this.renderSpinner();\r\n    }\r\n    \r\n    if(isError) {\r\n      return this.renderErrorPage();\r\n    }\r\n\r\n    return (\r\n      <section className='app'>\r\n        <ImageGallery\r\n          ref={i => this._imageGallery = i}\r\n          items={this.state.images}\r\n          onClick={this._onImageClick.bind(this)}\r\n          onImageLoad={this._onImageLoad}\r\n          onSlide={this._onSlide.bind(this)}\r\n          onPause={this._onPause.bind(this)}\r\n          onScreenChange={this._onScreenChange.bind(this)}\r\n          onPlay={this._onPlay.bind(this)}\r\n          infinite={this.state.infinite}\r\n          showBullets={this.state.showBullets}\r\n          showFullscreenButton={this.state.showFullscreenButton && this.state.showGalleryFullscreenButton}\r\n          showPlayButton={this.state.showPlayButton && this.state.showGalleryPlayButton}\r\n          showThumbnails={this.state.showThumbnails}\r\n          showIndex={this.state.showIndex}\r\n          showNav={this.state.showNav}\r\n          isRTL={this.state.isRTL}\r\n          thumbnailPosition={this.state.thumbnailPosition}\r\n          slideDuration={parseInt(this.state.slideDuration)}\r\n          slideInterval={parseInt(this.state.slideInterval)}\r\n          slideOnThumbnailOver={this.state.slideOnThumbnailOver}\r\n          additionalClass=\"app-image-gallery\"\r\n          useWindowKeyDown={this.state.useWindowKeyDown}\r\n        />\r\n\r\n        <div className='app-sandbox'>\r\n\r\n          <div className='app-sandbox-content'>\r\n            <h2 className='app-header'>Settings <Link className=\"button-like-link\" to=\"/\" replace>Back to Landing Page</Link></h2>\r\n\r\n            <ul className='app-buttons'>\r\n              <li>\r\n                <div className='app-interval-input-group'>\r\n                  <span className='app-interval-label'>Play Interval</span>\r\n                  <input\r\n                    className='app-interval-input'\r\n                    type='text'\r\n                    onChange={this._handleInputChange.bind(this, 'slideInterval')}\r\n                    value={this.state.slideInterval}/>\r\n                </div>\r\n              </li>\r\n\r\n              <li>\r\n                <div className='app-interval-input-group'>\r\n                  <span className='app-interval-label'>Slide Duration</span>\r\n                  <input\r\n                    className='app-interval-input'\r\n                    type='text'\r\n                    onChange={this._handleInputChange.bind(this, 'slideDuration')}\r\n                    value={this.state.slideDuration}/>\r\n                </div>\r\n              </li>\r\n\r\n              <li>\r\n                <div className='app-interval-input-group'>\r\n                  <span className='app-interval-label'>Thumbnail Bar Position</span>\r\n                  <select\r\n                    className='app-interval-input'\r\n                    value={this.state.thumbnailPosition}\r\n                    onChange={this._handleThumbnailPositionChange.bind(this)}\r\n                  >\r\n                    <option value='bottom'>Bottom</option>\r\n                    <option value='top'>Top</option>\r\n                    <option value='left'>Left</option>\r\n                    <option value='right'>Right</option>\r\n                  </select>\r\n                </div>\r\n              </li>\r\n            </ul>\r\n\r\n            <ul className='app-checkboxes'>\r\n              <li>\r\n                <input\r\n                  id='infinite'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'infinite')}\r\n                  checked={this.state.infinite}/>\r\n                  <label htmlFor='infinite'>allow infinite sliding</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='show_fullscreen'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'showFullscreenButton')}\r\n                  checked={this.state.showFullscreenButton}/>\r\n                  <label htmlFor='show_fullscreen'>show fullscreen button</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='show_playbutton'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'showPlayButton')}\r\n                  checked={this.state.showPlayButton}/>\r\n                  <label htmlFor='show_playbutton'>show play button</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='show_bullets'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'showBullets')}\r\n                  checked={this.state.showBullets}/>\r\n                  <label htmlFor='show_bullets'>show bullets</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='show_thumbnails'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'showThumbnails')}\r\n                  checked={this.state.showThumbnails}/>\r\n                  <label htmlFor='show_thumbnails'>show thumbnails</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='show_navigation'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'showNav')}\r\n                  checked={this.state.showNav}/>\r\n                  <label htmlFor='show_navigation'>show navigation</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='show_index'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'showIndex')}\r\n                  checked={this.state.showIndex}/>\r\n                  <label htmlFor='show_index'>show index</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='is_rtl'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'isRTL')}\r\n                  checked={this.state.isRTL}/>\r\n                  <label htmlFor='is_rtl'>is right to left</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='slide_on_thumbnail_hover'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'slideOnThumbnailOver')}\r\n                  checked={this.state.slideOnThumbnailOver}/>\r\n                  <label htmlFor='slide_on_thumbnail_hover'>slide on mouse over thumbnails</label>\r\n              </li>\r\n              <li>\r\n                <input\r\n                  id='use_window_keydown'\r\n                  type='checkbox'\r\n                  onChange={this._handleCheckboxChange.bind(this, 'useWindowKeyDown')}\r\n                  checked={this.state.useWindowKeyDown}/>\r\n                  <label htmlFor='use_window_keydown'>use window keydown</label>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport const mapStateToProps = store => {\r\n  return {\r\n    carouselConfig: store.CarouselReducer.carouselConfig\r\n  };\r\n};\r\n\r\nexport const mapDispatchToProps = dispatch => {\r\n  return {\r\n    getCarouselConfig: data => {\r\n      dispatch(getCarouselConfigAction(data));\r\n    }\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Carousel);\r\n\r\n","import * as Actions from \"../../redux/actions/action-types\";\r\n\r\n// Get carousel content config\r\nexport const getCarouselConfigAction = (data) => {\r\n  return {\r\n    type: Actions.GET_CAROUSEL_CONFIG_INIT,\r\n    data: data,\r\n  };\r\n};\r\n","import React from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport LandingPage from \"./containers/landing\";\r\nimport Carousel from \"./containers/carousel\";\r\n\r\nexport function Routes(props) {\r\n  return (\r\n    <Switch>\r\n      <Route exact path='/' component={LandingPage} />\r\n      <Route exact path='/:carouselRepo' component={Carousel} />\r\n      <Redirect to='/' />\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default withRouter(Routes);\r\n","import { Provider } from \"react-redux\";\nimport { HashRouter } from \"react-router-dom\";\n\nimport configStore from \"./redux/store/store\";\n\nimport UIErrorBoundary from \"./components/common/UIErrorBoundary\";\n\nimport Routes from \"./Routes\";\n\nimport \"./styles/index.css\";\n\nfunction App() {\n  return (\n    <Provider store={configStore}>\n      <HashRouter>\n        <UIErrorBoundary>\n          <Routes />\n        </UIErrorBoundary>\n      </HashRouter>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}